function initBasicExample() {
  const buttons = [document.querySelector('#openBasic'), document.querySelector('#closeBasic')];
  const drawer = document.querySelector('#defaultDrawer');

  buttons.forEach((button) => {
    button.addEventListener('click', () => {
      if (drawer.hasAttribute('open')) {
        drawer.removeAttribute('open');
      } else {
        drawer.setAttribute('open', true);
      }
    });
  });
}

function initAccessibilityExample() {
  const button = document.querySelector('#openAccessibility');
  const drawer = document.querySelector('#unformattedMdDrawer');

  button.addEventListener('click', () => {
    if (drawer.hasAttribute('open')) {
      drawer.removeAttribute('open');
    } else {
      drawer.setAttribute('open', true);
    }
  });
}

function initDecoupledExample() {
  const smLgButtons = [document.querySelector('#openSmLg'), document.querySelector('#closeSmLg')];
  const smLgDrawer = document.querySelector('#smLgDrawer');

  const mdLgButtons = [document.querySelector('#openMdLg'), document.querySelector('#closeMdLg')];
  const mdLgDrawer = document.querySelector('#mdLgDrawer');

  smLgButtons.forEach((button) => {
    button.addEventListener('click', () => {
      if (smLgDrawer.hasAttribute('open')) {
        smLgDrawer.removeAttribute('open');
      } else {
        smLgDrawer.setAttribute('open', true);
      }
    });
  });

  mdLgButtons.forEach((button) => {
    button.addEventListener('click', () => {
      if (mdLgDrawer.hasAttribute('open')) {
        mdLgDrawer.removeAttribute('open');
      } else {
        mdLgDrawer.setAttribute('open', true);
      }
    });
  });
}

function initEditCloseButtonExample() {
  const button = document.querySelector('#openEditDrawer');
  const drawer = document.querySelector('#unformattedCustomMdDrawer');

  button.addEventListener('click', () => {
    if (drawer.hasAttribute('open')) {
      drawer.removeAttribute('open');
    } else {
      drawer.setAttribute('open', true);
    }
  });
}

function initModalExample() {
  const defaultButtons = [document.querySelector('#openDefaultModal'), document.querySelector('#closeDefaultModal')];
  const defaultDrawer = document.querySelector('#defaultModalDrawer');

  const mediumButtons = [document.querySelector('#openMediumModal'), document.querySelector('#closeMediumModal')];
  const mediumDrawer = document.querySelector('#mediumModalDrawer');

  const smallButtons = [document.querySelector('#openSmallModal'), document.querySelector('#closeSmallModal')];
  const smallDrawer = document.querySelector('#smallModalDrawer');

  defaultButtons.forEach((button) => {
    button.addEventListener('click', () => {
      if (defaultDrawer.hasAttribute('open')) {
        defaultDrawer.removeAttribute('open');
      } else {
        defaultDrawer.setAttribute('open', true);
      }
    });
  });

  mediumButtons.forEach((button) => {
    button.addEventListener('click', () => {
      if (mediumDrawer.hasAttribute('open')) {
        mediumDrawer.removeAttribute('open');
      } else {
        mediumDrawer.setAttribute('open', true);
      }
    });
  });

  smallButtons.forEach((button) => {
    button.addEventListener('click', () => {
      if (smallDrawer.hasAttribute('open')) {
        smallDrawer.removeAttribute('open');
      } else {
        smallDrawer.setAttribute('open', true);
      }
    });
  });
}

function initPopoverAndDropdownExample() {
  const buttons = [document.querySelector('#openPopAndDrop'), document.querySelector('#closePopAndDrop')];
  const drawer = document.querySelector('#popover-drawer');

  buttons.forEach((button) => {
    button.addEventListener('click', () => {
      if (drawer.hasAttribute('open')) {
        drawer.removeAttribute('open');
      } else {
        drawer.setAttribute('open', true);
      }
    });
  });
}

function initSizeOptionsExample() {
  const defaultButtons = [document.querySelector('#openDefaultSize'), document.querySelector('#closeDefaultSize')];
  const defaultDrawer = document.querySelector('#defaultSizeDrawer');

  const mediumButtons = [document.querySelector('#openMediumSize'), document.querySelector('#closeMediumSize')];
  const mediumDrawer = document.querySelector('#mediumSizeDrawer');

  const smallButtons = [document.querySelector('#openSmallSize'), document.querySelector('#closeSmallSize')];
  const smallDrawer = document.querySelector('#smallSizeDrawer');

  defaultButtons.forEach((button) => {
    button.addEventListener('click', () => {
      if (defaultDrawer.hasAttribute('open')) {
        defaultDrawer.removeAttribute('open');
      } else {
        defaultDrawer.setAttribute('open', true);
      }
    });
  });

  mediumButtons.forEach((button) => {
    button.addEventListener('click', () => {
      if (mediumDrawer.hasAttribute('open')) {
        mediumDrawer.removeAttribute('open');
      } else {
        mediumDrawer.setAttribute('open', true);
      }
    });
  });

  smallButtons.forEach((button) => {
    button.addEventListener('click', () => {
      if (smallDrawer.hasAttribute('open')) {
        smallDrawer.removeAttribute('open');
      } else {
        smallDrawer.setAttribute('open', true);
      }
    });
  });
}

function initSlideOptionsExample() {
  const defaultButtons = [document.querySelector('#openDefaultSlide'), document.querySelector('#closeDefaultSlide')];
  const defaultDrawer = document.querySelector('#defaultSlideDrawer');

  const leftButtons = [document.querySelector('#openLeftSlide'), document.querySelector('#closeLeftSlide')];
  const leftDrawer = document.querySelector('#leftSlideDrawer');

  defaultButtons.forEach((button) => {
    button.addEventListener('click', () => {
      if (defaultDrawer.hasAttribute('open')) {
        defaultDrawer.removeAttribute('open');
      } else {
        defaultDrawer.setAttribute('open', true);
      }
    });
  });

  leftButtons.forEach((button) => {
    button.addEventListener('click', () => {
      if (leftDrawer.hasAttribute('open')) {
        leftDrawer.removeAttribute('open');
      } else {
        leftDrawer.setAttribute('open', true);
      }
    });
  });
}

function initExamples(initCount) {
  initCount = initCount || 0;

  try {
    initBasicExample();
    initAccessibilityExample();
    initDecoupledExample();
    initEditCloseButtonExample();
    initModalExample();
    initPopoverAndDropdownExample();
    initSizeOptionsExample();
    initSlideOptionsExample();
  } catch (err) {
    if (initCount <= 20) {
      // setTimeout handles issue where content is sometimes loaded after the functions get called
      setTimeout(() => {
        initExamples(initCount + 1);
      }, 100);
    }
  }
}

export { initExamples };
